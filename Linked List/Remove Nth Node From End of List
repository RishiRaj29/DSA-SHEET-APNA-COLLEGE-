/*         Remove Nth Node From End of List              */

One Pass Solution-> 

Use fast and slow pointers. The fast pointer is n steps ahead of the slow pointer. 
When the fast reaches the end, the slow pointer points at the previous element of the target element.

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head->next==NULL and n==1)
            return NULL;
        
        ListNode *slow=head,*fast=head;
        
        while(n--)
            fast=fast->next;
        
        if(fast==NULL)  // if fast reaches the end that means we have to delete the first node
        {
            head=head->next;
            return head;
        }
        
        while(fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next;
        }

        slow->next=slow->next->next;
        return head;
    }
};
